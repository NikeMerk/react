{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nexport default function useCount() {\n  _s();\n  const [count, setState] = useState(0);\n  let increment = useCallback(() => {\n    setState(currentCount => currentCount + 1);\n  }, []);\n  let decrement = useCallback(() => {\n    setState(currentCount => currentCount - 1);\n  }, []);\n  return {\n    count,\n    increment,\n    decrement\n  };\n}\n_s(useCount, \"jESLKwHqeJ/h4Cyg5vbywu5rrOQ=\");","map":{"version":3,"names":["useState","useCallback","useCount","_s","count","setState","increment","currentCount","decrement"],"sources":["/Users/nikemerkushev/Documents/programing/GitHub/react/counter/src/hooks/useState.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport default function useCount() {\n  const [count, setState] = useState(0);\n\n  let increment = useCallback(() => {\n    setState((currentCount) => currentCount + 1);\n  }, []);\n  let decrement = useCallback(() => {\n    setState((currentCount) => currentCount - 1);\n  }, []);\n\n  return { count, increment, decrement };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErC,IAAIM,SAAS,GAAGL,WAAW,CAAC,MAAM;IAChCI,QAAQ,CAAEE,YAAY,IAAKA,YAAY,GAAG,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EACN,IAAIC,SAAS,GAAGP,WAAW,CAAC,MAAM;IAChCI,QAAQ,CAAEE,YAAY,IAAKA,YAAY,GAAG,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEH,KAAK;IAAEE,SAAS;IAAEE;EAAU,CAAC;AACxC;AAACL,EAAA,CAXuBD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}